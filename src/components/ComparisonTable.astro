---
/**
 * Table de Comparaison Produits
 * Compare plusieurs modèles côte à côte
 */

interface ComparisonItem {
  name: string;
  image?: string;
  specs: Record<string, string | number | boolean>;
  price?: string;
  cta?: {
    text: string;
    url: string;
  };
  badge?: string; // "Populaire", "Meilleur rapport qualité/prix", etc.
}

interface Props {
  title?: string;
  subtitle?: string;
  items: ComparisonItem[];
  features: string[]; // Liste des caractéristiques à comparer
}

const {
  title = "Comparaison des Modèles",
  subtitle,
  items,
  features
} = Astro.props;

// Helper pour formater les valeurs
const formatValue = (value: any) => {
  if (typeof value === 'boolean') {
    return value ? '✓' : '✗';
  }
  return value;
};

// Helper pour la classe de la valeur booléenne
const getBooleanClass = (value: any) => {
  if (typeof value === 'boolean') {
    return value ? 'text-green-600' : 'text-gray-400';
  }
  return 'text-gray-900';
};
---

<section class="comparison-section py-12">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-10">
      <h2 class="text-3xl font-bold text-gray-900 mb-2">{title}</h2>
      {subtitle && <p class="text-lg text-gray-600">{subtitle}</p>}
    </div>

    <!-- Table Desktop -->
    <div class="hidden lg:block overflow-x-auto">
      <table class="w-full bg-white rounded-lg shadow-sm overflow-hidden">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-4 text-left text-sm font-semibold text-gray-900 w-1/4">
              Caractéristiques
            </th>
            {items.map(item => (
              <th class="px-6 py-4 text-center border-l border-gray-200 relative">
                {item.badge && (
                  <span class="absolute top-2 right-2 px-2 py-1 text-xs font-medium bg-blue-600 text-white rounded">
                    {item.badge}
                  </span>
                )}
                <div class="font-semibold text-gray-900 text-lg mb-1">{item.name}</div>
                {item.price && (
                  <div class="text-sm text-blue-600 font-medium">{item.price}</div>
                )}
              </th>
            ))}
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-200">
          {features.map((feature, index) => (
            <tr class={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>
              <td class="px-6 py-4 text-sm font-medium text-gray-900">
                {feature}
              </td>
              {items.map(item => (
                <td class={`px-6 py-4 text-center border-l border-gray-200 text-sm ${getBooleanClass(item.specs[feature])}`}>
                  <span class="font-medium">
                    {formatValue(item.specs[feature]) || '-'}
                  </span>
                </td>
              ))}
            </tr>
          ))}
          <!-- CTAs Row -->
          <tr class="bg-gray-50">
            <td class="px-6 py-4"></td>
            {items.map(item => (
              <td class="px-6 py-6 text-center border-l border-gray-200">
                {item.cta && (
                  <a
                    href={item.cta.url}
                    class="inline-flex items-center px-4 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors text-sm"
                  >
                    {item.cta.text}
                    <svg class="w-4 h-4 ml-2" viewBox="0 0 24 24" fill="none" aria-hidden="true">
                      <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                    </svg>
                  </a>
                )}
              </td>
            ))}
          </tr>
        </tbody>
      </table>
    </div>

    <!-- Cards Mobile -->
    <div class="lg:hidden space-y-6">
      {items.map(item => (
        <div class="bg-white rounded-lg shadow-sm overflow-hidden">
          {item.badge && (
            <div class="bg-blue-600 text-white text-center py-2 text-sm font-medium">
              {item.badge}
            </div>
          )}
          <div class="p-6">
            <h3 class="text-xl font-bold text-gray-900 mb-2">{item.name}</h3>
            {item.price && (
              <div class="text-lg text-blue-600 font-medium mb-4">{item.price}</div>
            )}

            <dl class="space-y-3">
              {features.map(feature => (
                <div class="flex justify-between py-2 border-b border-gray-100">
                  <dt class="text-sm font-medium text-gray-700">{feature}</dt>
                  <dd class={`text-sm font-semibold ${getBooleanClass(item.specs[feature])}`}>
                    {formatValue(item.specs[feature]) || '-'}
                  </dd>
                </div>
              ))}
            </dl>

            {item.cta && (
              <a
                href={item.cta.url}
                class="mt-6 w-full inline-flex items-center justify-center px-4 py-3 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors"
              >
                {item.cta.text}
                <svg class="w-4 h-4 ml-2" viewBox="0 0 24 24" fill="none" aria-hidden="true">
                  <path d="M5 12H19M19 12L12 5M19 12L12 19" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </a>
            )}
          </div>
        </div>
      ))}
    </div>

    <!-- Note -->
    <p class="text-center text-sm text-gray-500 mt-6">
      * Prix indicatifs HT. Contactez-nous pour un devis personnalisé selon votre configuration.
    </p>
  </div>
</section>

<style>
  .comparison-section table {
    border-collapse: separate;
    border-spacing: 0;
  }

  .comparison-section th,
  .comparison-section td {
    transition: background-color 0.2s;
  }

  .comparison-section tbody tr:hover td {
    background-color: #f9fafb;
  }

  /* Highlight column on hover (desktop only) */
  @media (min-width: 1024px) {
    .comparison-section td:hover {
      background-color: #eff6ff !important;
    }
  }
</style>
